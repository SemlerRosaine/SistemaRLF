/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemarlf.visualizacao.pedido;

import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import sistemarlf.Principal;
import sistemarlf.modelo.entidades.cliente.Cliente;
import sistemarlf.modelo.entidades.pedido.Pedido;
import sistemarlf.modelo.oad.cliente.OADCliente;
import sistemarlf.modelo.oad.pedido.OADPedido;
import uteis.grid.tablemodel.MyTableModel;

/**
 *
 * @author Wine
 */
public class FormConsultaPedido extends javax.swing.JPanel {

    FormCadPedido telaChamadora;
    JInternalFrame telaCarregada;
    List<Pedido> pedidos;
    MyTableModel<Pedido> tmConsultaPedido;
    private Pedido pedidoSelecionado;
    //DefaultTableModel tmConsultaPedido;

    public FormConsultaPedido() {
        
        super();
        initComponents();
        this.btnExcluir.setEnabled(false);
        this.btnAlterar.setEnabled(false);
        this.gridConsulta.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                if (!gridConsulta.getSelectionModel().isSelectionEmpty()) {
                    pedidoSelecionado = pedidos.get(gridConsulta.getSelectedRow());
                } else {
                    pedidoSelecionado = null;
                }
                btnExcluir.setEnabled(pedidoSelecionado instanceof Pedido);
                btnAlterar.setEnabled(pedidoSelecionado instanceof Pedido);
            }
        });
        this.gridConsulta.addFocusListener(new FocusAdapter() {
            @Override
            public void focusLost(FocusEvent fe) {
                gridConsulta.clearSelection();
            }
        });
        this.gridConsulta.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                if (me.getButton() == MouseEvent.BUTTON3) {
                    gridConsulta.clearSelection();
                }
                super.mouseClicked(me);
            }
        });

        /*
         * VERIFICAÇÃO DOS CAMPOS DE PESQUISA PARA HABILITAR/DESABILITAR O 
         * BOTÃO DE "PESQUISAR".
         */
        this.txtCodPedido.addCaretListener(new CaretListener() {
            @Override
            public void caretUpdate(CaretEvent ce) {
                pesquisaPedido((!txtCodPedido.getText().trim().isEmpty()) ? Integer.parseInt(txtCodPedido.getText().trim()) : null);
            }
        });
        this.txtDataPedido.addCaretListener(new CaretListener() {
            @Override
            public void caretUpdate(CaretEvent ce) {
                pesquisaPedido((!txtDataPedido.getText().trim().isEmpty()) ? txtDataPedido.getText().trim() : null);
            }
        });
    }

    
    
    /**
     * Creates new form ProtCadastraCliente
     */
    public FormConsultaPedido(JInternalFrame jfCarregada, FormCadPedido jfChamadora, Pedido p) {
        telaCarregada = jfCarregada;
        telaChamadora = jfChamadora;
        consultarPedido(p);
        if (telaChamadora != null) {
            if (p.getCodigo() != null && !p.getCodigo().equals(0)) {
                txtCodPedido.setText(p.getCodigo().toString());
            }
            btnFechar.setText("Selecionar");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtCodPedido = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDataPedido = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnVisualizar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridConsulta = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setAutoscrolls(true);
        setMaximumSize(new java.awt.Dimension(0, 0));
        setMinimumSize(new java.awt.Dimension(700, 500));
        setName("ProtCadastraCliente"); // NOI18N
        setPreferredSize(new java.awt.Dimension(700, 500));
        setVerifyInputWhenFocusTarget(false);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sistemarlf/visualizacao/produto/Bundle"); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("FormConsultaProduto.jPanel1.border.title"))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(750, 400));
        jPanel1.setPreferredSize(new java.awt.Dimension(750, 300));

        jLabel4.setText(bundle.getString("FormConsultaProduto.jLabel4.text")); // NOI18N

        txtCodPedido.setText(bundle.getString("FormConsultaProduto.txtCodProdPedido.text")); // NOI18N
        txtCodPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodPedidoKeyReleased(evt);
            }
        });

        jLabel10.setText(bundle.getString("FormConsultaProduto.jLabel10.text")); // NOI18N

        txtDataPedido.setText(bundle.getString("FormConsultaProduto.txtDescProdPedido.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCodPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new java.awt.BorderLayout());

        btnFechar.setText(bundle.getString("FormConsultaProduto.btnFechar.text")); // NOI18N
        btnFechar.setFocusable(false);
        btnFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnExcluir.setText(bundle.getString("FormConsultaProduto.btnExcluir.text")); // NOI18N
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setText(bundle.getString("FormConsultaProduto.btnAlterar.text")); // NOI18N
        btnAlterar.setFocusable(false);
        btnAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("sistemarlf/visualizacao/pedido/Bundle"); // NOI18N
        btnVisualizar.setText(bundle1.getString("FormConsultaPedido.btnVisualizar.text")); // NOI18N
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        btnNovo.setText(bundle.getString("FormConsultaProduto.btnNovo.text")); // NOI18N
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        gridConsulta.setAutoCreateRowSorter(true);
        gridConsulta.setModel(this.construirTableModel());
        gridConsulta.setAutoscrolls(false);
        gridConsulta.setEditingRow(0);
        gridConsulta.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        gridConsulta.getTableHeader().setReorderingAllowed(false);
        gridConsulta.setCellSelectionEnabled(false);
        gridConsulta.setRowSelectionAllowed(true);
        gridConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gridConsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gridConsulta);
        gridConsulta.getColumnModel().getColumn(0).setPreferredWidth(20);
        gridConsulta.getColumnModel().getColumn(1).setPreferredWidth(20);
        gridConsulta.getColumnModel().getColumn(2).setPreferredWidth(20);
        gridConsulta.getColumnModel().getColumn(3).setPreferredWidth(20);
        gridConsulta.getColumnModel().getColumn(4).setPreferredWidth(20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 11, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnFechar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNovo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAlterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnVisualizar)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVisualizar)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnNovo)
                    .addComponent(btnFechar))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName(bundle.getString("FormConsultaProduto.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        telaCarregada.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:
        if (this.pedidoSelecionado instanceof Pedido) {
            Principal.TELA_PRINCIPAL.abrirJanelaPedido(this.telaCarregada, this.pedidoSelecionado, true).addInternalFrameListener(new InternalFrameAdapter() {
             @Override
                public void internalFrameClosed(InternalFrameEvent ife) {
                    atualizarGridPedidos();
                    super.internalFrameClosed(ife);
                }
            
            });
        } else {
            JOptionPane.showInputDialog("Selecione um cliente para efetivar  a operação");
        }



    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        if (this.pedidoSelecionado instanceof Pedido) {
            excluirPedido(this.pedidoSelecionado);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um pedido para efetivar  a operação");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed
    private void excluirPedido(Pedido pedido) {
        if (JOptionPane.showConfirmDialog(this, "Confirma a exclusão do pedido?", "Confirmação", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (!new OADPedido().remove(pedido)) {
                JOptionPane.showMessageDialog(this, "Não foi possível Excluir! Verifique se este pedido esta ativo", "", JOptionPane.ERROR_MESSAGE);
            } else {
                atualizarGridPedidos();
            }
        }
    }    
    private void pesquisaPedido(Integer codigo){
        if (codigo != null) {
            Pedido pedido = new Pedido();
            pedido.setCodigo(codigo);
            consultarPedido(pedido);
        } else {
            atualizarGridPedidos();
        }
    }
    private void pesquisaPedido(String dataPedido){
        if ((dataPedido != null) && !dataPedido.trim().isEmpty()) {
            Pedido pedido = new Pedido();
            try {
                pedido.setDataInclusao(SimpleDateFormat.getDateInstance().parse(dataPedido));
            } catch (ParseException ex) {
                Logger.getLogger(FormConsultaPedido.class.getName()).log(Level.SEVERE, null, ex);
            }
            consultarPedido(pedido);
        } else {
            atualizarGridPedidos();
        }
    }
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        Principal.TELA_PRINCIPAL.abrirJanelaPedido(null, new Pedido(), true);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void gridConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gridConsultaMouseClicked
    }//GEN-LAST:event_gridConsultaMouseClicked

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
        // TODO add your handling code here:
        Pedido ped; //= new Pedido();
        //ped.setCodigo(Integer.valueOf(tmConsultaPedido.getValueAt(gridConsulta.getSelectedRow(), 0).toString()));
        //ped = new OADPedido().carrega(ped);
        if (gridConsulta.getSelectedRowCount() == 0) {
            JOptionPane.showInputDialog("Selecione um pedido para efetivar  a operação");
        } else {
            ped = pedidos.get(gridConsulta.getSelectedRow());
            Principal.TELA_PRINCIPAL.abrirJanelaPedido(null, ped, true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void txtCodPedidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodPedidoKeyReleased
        JTextField t = (JTextField) evt.getSource();
        t.setText(t.getText().replaceAll("[^0-9]", ""));        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodPedidoKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton btnAlterar;
    javax.swing.JButton btnExcluir;
    javax.swing.JButton btnFechar;
    javax.swing.JButton btnNovo;
    javax.swing.JButton btnVisualizar;
    javax.swing.JTable gridConsulta;
    javax.swing.JLabel jLabel10;
    javax.swing.JLabel jLabel4;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JSeparator jSeparator1;
    javax.swing.JTextField txtCodPedido;
    javax.swing.JTextField txtDataPedido;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        txtCodPedido.setText(null);
        txtDataPedido.setText(null);
    }

    public void consultarPedido(Pedido p) {
        tmConsultaPedido.setRowCount(0);

        if ((p == null) || ((p.getCodigo() == null || p.getCodigo().equals(0)))) {
            List<Pedido> lp = new OADPedido().carregaTodos();
            for (int i = 0; i < lp.size(); i++) {
                tmConsultaPedido.addRow(lp.get(i).getLinha());
            }
        } else {
            p = new OADPedido().carrega(p);
            tmConsultaPedido.addRow(p.getLinha());
        }


    }
    private void atualizarGridPedidos(Pedido pedido, Boolean adicionar) {
        if (!adicionar) {
            this.pedidos = new ArrayList<Pedido>();
        }
        this.pedidos.add(pedido);
        this.atualizarGridPedidos(this.pedidos);
    }

    private void atualizarGridPedidos() {
        this.atualizarGridPedidos(new OADPedido().carregaTodos());
    }

    private void atualizarGridPedidos(List<Pedido> pedidos) {
        this.pedidos = pedidos;
        this.gridConsulta.removeAll();
        this.tmConsultaPedido.setRowCount(0);
        for (Pedido pedido : pedidos) {
            tmConsultaPedido.addRow(pedido);
        }
    }
     private MyTableModel<Pedido> construirTableModel() {
        this.tmConsultaPedido = new MyTableModel<Pedido>() {
            @Override
            public void addRow(Pedido objeto) {
                this.addRow(new String[]{
                    objeto.getCodigo().toString(),
                    objeto.getCliente().getNomeRazaoSocial(),
                    objeto.getDataFechamento().toString(),
                    objeto.getDataInclusao().toString(),
                    objeto.getLinha().toString(),
                    objeto.getSituacao().toString()
                    
                });
            }

            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };
        this.tmConsultaPedido.setColumnIdentifiers(new String[]{
            "Código",
            "Nome/Razão social",
            "Data Fechamento",
            "Data Inclusao",
            "Linha",
            "Situacao"
        });
        return this.tmConsultaPedido;
    }
}
